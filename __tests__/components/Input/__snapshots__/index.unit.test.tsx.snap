// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Input tests Should renders correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={Object {}}
    style={
      Object {
        "alignItems": "center",
        "width": "100%",
      }
    }
  >
    <View
      dataSet={Object {}}
      style={
        Object {
          "flexDirection": "row",
          "width": "100%",
        }
      }
    >
      <View
        dataSet={Object {}}
        style={Object {}}
      />
      <View
        dataSet={Object {}}
        isFocused={false}
        style={
          Object {
            "alignItems": "center",
            "borderBottomLeftRadius": 0,
            "borderBottomRightRadius": 8,
            "borderColor": "#d4d4d4",
            "borderRadius": 4,
            "borderTopLeftRadius": 0,
            "borderTopRightRadius": 8,
            "borderWidth": 1,
            "flex": 1,
            "flexDirection": "row",
            "marginLeft": 0,
            "overflow": "hidden",
          }
        }
      >
        <TextInput
          accessible={true}
          dataSet={Object {}}
          editable={true}
          onBlur={[Function]}
          onChangeText={[MockFunction]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder=""
          placeholderTextColor="#a3a3a3"
          secureTextEntry={false}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomLeftRadius": 0,
              "borderTopLeftRadius": 0,
              "color": "#171717",
              "flex": 1,
              "fontFamily": undefined,
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": "100%",
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
              "width": "100%",
            }
          }
          value=""
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
